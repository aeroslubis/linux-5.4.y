#========================================================================================================================
# Description: Automatically Build Kernel For Amlogic
# Copyright (C) 2021 https://github.com/aeroslubis/linux-5.4y
#========================================================================================================================

name: Build Kernel For Amlogic

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection'
        required: false
        default: 'false'
#  schedule:
#    - cron: '0 17 * * 0'

env:
  DELETE_RELEASE: true
  DELETE_ARTIFACTS: true
  KEEP_DAY: 30
  KEEP_MININUM_RUNS: 0
  KEEP_MININUM_RELEASE: 6
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        if [ -n ${{ github.event.inputs.armbianboard }} ]; then
           ARMBIAN_BOARD=${{ github.event.inputs.armbianboard }}
        else
           ARMBIAN_BOARD=lepotato
        fi
        echo "ARMBIAN_BOARD=${ARMBIAN_BOARD}" >> $GITHUB_ENV
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: SSH connection to Actions @ Ctrl+C to enter, Ctrl+D to exit
      uses: P3TERX/ssh2actions@main
      with:
        mode: ngrok
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

    - name: Download tools
      run: |
        cd /opt
        wget "https://releases.linaro.org/components/toolchain/binaries/7.4-2019.02/aarch64-linux-gnu/gcc-linaro-7.4.1-2019.02-x86_64_aarch64-linux-gnu.tar.xz"
        tar xf gcc-linaro-7.4.1-2019.02-x86_64_aarch64-linux-gnu.tar.xz

    - name: Build Kernel
      id: build
      run: |
        mv config .config
        sudo ./set_make
        echo "::set-output name=status::success"
